pipeline {
    agent { label "wsl-agent" }

    stages {
        stage("git checkout") {
            steps {
                git branch: "main", credentialsId: "GitHubCred", url: "https://github.com/RASEEB-UX/labourHiringSystem.git"
                echo "git checkout successfully"
            }
        }

        stage("static-code-analysis") {
            environment {
                SONARURL = "http://localhost:9000/"
            }
            steps {
                withCredentials([string(credentialsId: "SonarQube", variable: 'SONAR_AUTH_TOKEN')]) {
                    sh '''
                        sonar-scanner \
                        -Dsonar.projectKey=my-backend-project \
                        -Dsonar.host.url=http://localhost:9000 \
                        -Dsonar.login=a1dc7ad3784cc39c51a363a1f6b9ad03611c8c53
                    '''
                }
            }
        }

        stage("Docker-compose") {
            steps {
                sh "docker-compose build"
                echo "Successfully created containers"
            }
        }

        stage("login and push") {
            steps {
                withCredentials([usernamePassword(credentialsId: 'DockerCred', usernameVariable: 'DOCKER_USER', passwordVariable: 'DOCKER_PASS')]) {
                    sh "echo $DOCKER_PASS | docker login -u $DOCKER_USER --password-stdin"
                    sh "docker-compose push"
                }
            }
        }

        stage("update the k8s files") {
            environment {
                GITHUB_REPO_NAME = "labourHiringSystem"
                GITHUB_USERNAME = "RASEEB-UX"
            }
            steps {
                withCredentials([usernamePassword(credentialsId: "GitHubCred", usernameVariable: 'GIT_USER', passwordVariable: 'GIT_PASS')]) {
                    sh '''
                        git config user.email "raseebriyazkhan@gmail.com"
                        git config user.name "$GITHUB_USERNAME"
                        git checkout main

                        # Update image tag in all three deployment files
                        sed -i "s/replaceImage/${BUILD_NUMBER}/g" frontend-deployment.yml
                        sed -i "s/replaceImage/${BUILD_NUMBER}/g" backend-deployment.yml
                        sed -i "s/replaceImage/${BUILD_NUMBER}/g" mongo-deployment.yml

                        git add frontend-deployment.yml backend-deployment.yml mongo-deployment.yml
                        git commit -m "Updated deployment images to version ${BUILD_NUMBER}"
                        git push https://$GIT_USER:$GIT_PASS@github.com/$GITHUB_USERNAME/$GITHUB_REPO_NAME HEAD:main
                    '''
                }
            }
        }
    }
}
